// Define variables

// PiMMS TCP Server details
	String sPimmsServerIpAddress = "192.168.16.1";
	int iPimmsPort = 57343;

// Local IP Addresses

	// Trigger (one per system)
	String sTriggerIpAddress  = "192.168.16.21";

	// Train Controllers (one per train)
	String[] sTrainIpAddress = { "192.168.16.31", "192.168.16.32", "192.168.16.33" };

// Sample battery and video inf file locations
	String sBatteryFile = "C:\Stream-Server-Master\PiMMS-Files\battery.ini";
	String sVideoInfFile = "C:\Stream-Server-Master\PiMMS-Files\clip0.inf";


// At the start of a ride (when a train is detected by 'out' RFID reader)
public void StartRide(int iTrainID)
{
	// Send train started and trigger event messages to PiMMS server
	// Using sTriggerIpAddress as the source IP
	// PiMMS counts train IDs starting from 0, i.e. for train 1 send trainID 0

	sendTrainStartMessage(sTriggerIpAddress, sPimmsServerIpAddress, iPimmsPort, iTrainID);
	sendTriggerMessage(sTriggerIpAddress, sPimmsServerIpAddress, iPimmsPort);
}

// At end of ride once all videos have either been downloaded or timed out
public void AllVideosDownloaded(iTrainID)
{
	foreach(camera)
	{
		// Rename the downloaded video files to 'clip0.mpg'
		file.move("cameraHotFolder\DownloadedVideoFileName", "camerahotfolder\clip0.mpg" );
		// Create video information file
		file.copy(sVideoInfFile, "camerahotfolder\clip0.inf");
		// Create battery status file
		file.copy(sBatteryFile, camerahotfolder\logs\battery.ini);
	}

	// Let the PiMMS server know everything is ready to download
	// by sending a log on message from the source IP address for this train
	sendLogOnMessage(sTrainIpAddress[iTrainID], sPimmsServerIpAddress, iPimmsPort);
	
}

private void sendTrainStartMessage(String sSourceIpAddress, String sDestIpAddress, int iDestPort, int iTrainID)
{
	Byte[] data = { 0x23, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00,
                    0x00, 0x00, 0x05, 0x02, 0x01, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x12 };
	// Set the train ID
	data[17] = sTrainID; // train 1 = 0, train 2 = 1 etc
	
	tcpConnection.SourceIP = sSourceIpAddress;
	tcpConnection.DestinationIP = sDestIpAddress;
	tcpConnection.DesinationPort = iDestPort;
	tcpConnection.Send(data);
	tcpConnection.Close();
}

private void sendTriggerMessage(String sSourceIpAddress, String sDestIpAddress, int iDestPort)
{
	Byte[] data = { 0x23, 0x21, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0c,
                    0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x0f };
		
	tcpConnection.SourceIP = sSourceIpAddress;
	tcpConnection.DestinationIP = sDestIpAddress;
	tcpConnection.DesinationPort = iDestPort;
	tcpConnection.Send(data);
	tcpConnection.Close();
}

private void sendLogOnMessage(String sSourceIpAddress, String sDestIpAddress, int iDestPort)
{
	byte[] data = {
	                0x23, 0x21, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00,
	                0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x4F, 0x00, 0x4B, 0x00,
	                0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x53, 0x00,
	                0x53, 0x00, 0x49, 0x00, 0x44, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
	                0x00, 0x12, 0x00, 0x56, 0x00, 0x69, 0x00, 0x6F, 0x00, 0x43, 0x00, 0x61,
	                0x00, 0x6D, 0x00, 0x65, 0x00, 0x72, 0x00, 0x61, 0x00, 0x00, 0x00, 0x14,
	                0x00, 0x5F, 0x00, 0x5F, 0x00, 0x4D, 0x00, 0x53, 0x00, 0x47, 0x00, 0x5F,
	                0x00, 0x54, 0x00, 0x59, 0x00, 0x50, 0x00, 0x45, 0x00, 0x00, 0x00, 0x02,
	                0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x5F, 0x00,
	                0x5F, 0x00, 0x4D, 0x00, 0x53, 0x00, 0x47, 0x00, 0x5F, 0x00, 0x53, 0x00,
	                0x54, 0x00, 0x52, 0x00, 0x49, 0x00, 0x4E, 0x00, 0x47, 0x00, 0x00, 0x00,
	                0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x5F,
	                0x00, 0x5F, 0x00, 0x4D, 0x00, 0x53, 0x00, 0x47, 0x00, 0x5F, 0x00, 0x4F,
	                0x00, 0x50, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x44, 0x00, 0x45, 0x00, 0x00,
	                0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
	                0x54, 0x00, 0x45, 0x00, 0x53, 0x00, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00,
	                0x00, 0x00, 0x00, 0x00, 0xBF
                };

	tcpConnection.SourceIP = sSourceIpAddress;
	tcpConnection.DestinationIP = sDestIpAddress;
	tcpConnection.DesinationPort = iDestPort;
	tcpConnection.Send(data);
	tcpConnection.Close();
}